@inherits AppComponentBase
@namespace BlazorHybrid.Core.Device
@page "/"
@using static BlazorHybrid.Core.Device.BleExtension

<div class="row">
    <div class="col-12 col-m-6 col-sm-6">

        <Tab IsLazyLoadTabItem IsBorderCard>
            <TabItem Text="打印">
                @{
                    var isDisabled = !IsConnected && Devices == null;
                }
                <BootstrapInputGroup>
                    <BootstrapInputGroupLabel DisplayText="名称" class="border-primary" />
                    <BootstrapInput TValue="string" Color="Color.Primary" @bind-Value="Option.NameFilter" style="max-width: 80px;" />
                    <Select TValue="string" Color="Color.Primary" Items="PrinterDemoList" OnSelectedItemChanged="OnPrinterSelect" style="max-width: 100px; " />
                </BootstrapInputGroup>

                <BootstrapInputGroup class="m-1">
                    <Button Text="扫描" Size="Size.Small" @attributes=IsScanningCss OnClick="ScanDevice" />
                    <Button Text="连接" Size="Size.Small" OnClick="OnDeviceSelect" IsDisabled="@(Devices == null)" />
                    <Button Text="断开" Size="Size.Small" OnClick="OnDisConnectDevice" IsDisabled="@(Devices == null)" />
                    <Button Text="清空" Size="Size.Small" OnClick="OnReset" />
                    <Button Text="上次设备" Size="Size.Small" OnClick="(async()=>await SendDataAsyncCPCLBarcode(BleInfo))" IsDisabled="@(BleInfo.DeviceID == Guid.Empty)" />
                </BootstrapInputGroup>
                <BootstrapInputGroup class="m-1">
                    <Button Text="QR" Size="Size.Small" OnClick="SendDataAsyncCPCLQR" IsDisabled="@isDisabled" />
                    <Button Text="条码" Size="Size.Small" OnClick="SendDataAsyncCPCLBarcode" IsDisabled="@isDisabled" />
                    <Button Text="小票" Size="Size.Small" OnClick="SendDataAsyncCPCL" IsDisabled="@isDisabled" />
                    <Button Text="Escpos" Size="Size.Small" OnClick="SendDataAsyncESC" IsDisabled="@isDisabled" />
                    <Button Text="写入" Size="Size.Small" OnClick="ReadDeviceName" IsDisabled="@isDisabled" />
                    <Button Text="读取" Size="Size.Small" OnClick="ReadDeviceName" IsDisabled="@isDisabled" />
                </BootstrapInputGroup>

                @if (Devices != null && Devices.Count>0)
                {
                    <div class="row mt-1 g-3">
                        <div class="col-12 col-m-6 col-sm-6">
                            <Select TValue="Guid" Items="DeviceList" OnSelectedItemChanged="OnDeviceSelect" />
                        </div>
                        @if (Services != null)
                        {
                            <div class="col-12 col-m-6 col-sm-6">
                                <Select TValue="Guid" Items="ServiceidList" OnSelectedItemChanged="OnServiceidSelect" />
                            </div>
                            @if (Characteristics != null)
                            {
                                <div class="col-12 col-m-6 col-sm-6">
                                    <Select TValue="Guid" Items="CharacteristicList" OnSelectedItemChanged="OnCharacteristSelect" />
                                </div>
                                @if (ReadResult != null)
                                {
                                    <div class="col-12 col-m-6 col-sm-6">
                                        <Display TValue="string" Value="@ReadResult" />
                                    </div>
                                }
                            }
                        }
                    </div>

                    <Table @ref="Table" 
                           TItem="BleDevice" 
                           Items='Devices.Where(a=>a.ServicesRemark !="isNotPrinter")'
                           ShowDetailRow='(e)=>!(string.IsNullOrEmpty(e.ServicesRemark) && e.ServicesRemark !="-")'
                           OnDoubleClickRowCallback="OnDoubleClickRowCallback()!" 
                           TableSize="TableSize.Compact"
                           RenderMode="TableRenderMode.Table">
                        <TableColumns>
                            <TableColumn @bind-Field="@context.Name" Text="名称" TextWrap="true">
                                <Template Context="v">
                                    <div>
                                        @{
                                            var device = (BleDevice)v.Row;
                                        }
                                        <div>
                                            <b>@v.Value</b> 
                                        </div>
                                        <div>@device.Remark</div>
                                        <div>@device.ServicesRemark</div>
                                    </div>
                                </Template>
                            </TableColumn>
                            <TableColumn @bind-Field="@context.Rssi" Text="操作" Width="50">
                                <Template Context="v">
                                    <div>
                                        @{
                                            var device = (BleDevice)v.Row;
                                            var ser = device.Services.FirstOrDefault(a => a.Name != null && a.Name.StartsWith("打印服务"));
                                        }
                                        <div>@device.Rssi</div>
                                        @if (ser != null)
                                        {
                                            var chars= ser.Characteristics.Select(a => a.Id);
                                            var isPrinter = chars.IsPrintCharacteristics();

                                            if (isPrinter)
                                            {
                                                <div>
                                                    <Button Color="Color.Primary"
                                                            Text="Test"
                                                            Size="Size.ExtraSmall"
                                                            OnClickWithoutRender="()=> SendDataAsyncCPCLBarcode(device.Name,device.Id,ser.Id) " />
                                                </div>
                                            }
                                        }
                                    </div>
                                </Template>
                            </TableColumn>
                        </TableColumns>
                        <DetailRowTemplate>
                            <Table TItem="BleService" 
                                   Items="@context.Services" 
                                   OnDoubleClickRowCallback="OnDoubleClickRowCallback2()!"
                                   ShowDetailRow="ShowDetailRow" 
                                   IsAccordion
                                   TableSize="TableSize.Compact"
                                   RenderMode="TableRenderMode.Table">
                                <TableColumns Context="service">
                                    <TableColumn @bind-Field="@service.Name" Text="名称" TextWrap="true">
                                        <Template Context="v">
                                            <div>
                                                @{
                                                    var service = (BleService)v.Row;
                                                }
                                                <div>
                                                    <b>@v.Value</b>
                                                </div>
                                                <div>@service.Remark</div> 
                                            </div>
                                        </Template>
                                    </TableColumn>
                                    <TableColumn @bind-Field="@service.Id" Text="操作" Width="50">
                                        <Template Context="v">
                                            @{ 
                                                var chars = v.Row.Characteristics.Select(a => a.Id);
                                                var isPrinter = chars.IsPrintCharacteristics();

                                                if (isPrinter && v.Row.Characteristics.Where(a => a.CanWrite).Any())
                                                {
                                                    <Button Color="Color.Primary" 
                                                        Text="Test" 
                                                        Size="Size.ExtraSmall" 
                                                        IsDisabled="@(!((BleService)v.Row).Characteristics.Where(a => a.CanWrite).Any())"
                                                        OnClickWithoutRender="() => SendDataAsyncCPCLBarcode(context.Name, context.Id, v.Value) " />

                                                }
                                            }
                                        </Template>
                                    </TableColumn>
                                 </TableColumns>
                                <DetailRowTemplate Context="service">
                                    <Table TItem="BleCharacteristic" 
                                           Items="@service.Characteristics" 
                                           TableSize="TableSize.Compact"
                                           RenderMode="TableRenderMode.Table">
                                        <TableColumns Context="characteristic">
                                            <TableColumn @bind-Field="@characteristic.Name" Text="名称" TextWrap="true">
                                                <Template Context="v">
                                                    <div>
                                                        @{
                                                            var characteris = (BleCharacteristic)v.Row;
                                                        }
                                                        <div>
                                                            <b>@v.Value</b>
                                                        </div>
                                                        <div>@{ 
                                                                if (characteris.CanRead)
                                                                {
                                                                    <Tag Color="Color.Primary">读</Tag>
                                                                }
                                                                if (characteris.CanWrite)
                                                                {
                                                                    <Tag Color="Color.Success">写</Tag>
                                                                }
                                                                if (characteris.CanUpdate)
                                                                {
                                                                    <Tag Color="Color.Info">通知</Tag>
                                                                }
                                                            } 
                                                        </div>
                                                        <div>@characteris.StringValue</div>
                                                    </div>
                                                </Template>
                                            </TableColumn>
                                            <TableColumn @bind-Field="@characteristic.Id" Text="操作" Width="50">
                                                <Template Context="v">
                                                    @{
                                                        var isPrinter = v.Row.Id.IsPrintCharacteristics();
                                                        if (isPrinter && ((BleCharacteristic)v.Row).CanWrite)
                                                        {
                                                            <Button Color="Color.Primary"
                                                                    Text="Test"
                                                                    Size="Size.ExtraSmall"
                                                                    IsDisabled="@(!((BleCharacteristic) v.Row).CanWrite)"
                                                                    OnClickWithoutRender="()=>SendDataAsyncCPCLBarcode(new BleTagDevice(context.Name,context.Id,service.Id,v.Value))" />
                                                        }
                                                    }
                                                </Template>
                                            </TableColumn>
                                        </TableColumns>
                                    </Table>
                                </DetailRowTemplate>
                            </Table>
                        </DetailRowTemplate>
                    </Table>

                }

            </TabItem>
            <TabItem Text="设置">
                <div class="my-2">
                    <Button Text="测试" OnClick="SendDataAsyncCPCLTest" IsDisabled="@(!IsConnected)" />
                    <Button Icon="fa-solid fa-floppy-disk" Text="保存" class="ms-2" OnClick="SaveConfigOK" />
                    <PopConfirmButton Icon="fa-solid fas fa-clock-rotate-left" Size="Size.Small" Text="复位" class="ms-2" OnConfirm="()=>ResetConfig()" Color="Color.Warning" Content="确定复位设置吗？" />
                    <PopConfirmButton Size="Size.Small" Text="细" OnConfirm="()=>ResetConfig(1)" Color="Color.Warning" Content="确定复位为预设1吗? (细体价格条码,半高条码,290)" />
                    <PopConfirmButton Size="Size.Small" Text="2" OnConfirm="()=>ResetConfig(2)" Color="Color.Warning" Content="确定复位为预设2吗? (粗体价格条码,半高条码,290)" />
                    <PopConfirmButton Size="Size.Small" Text="3" OnConfirm="()=>ResetConfig(3)" Color="Color.Warning" Content="确定复位为预设3吗? (粗体价格,细体条码,中心偏移往右,半宽标签,190)" />
                </div>
                <p>位置定义说明: {字体编号} {字体大小} {横向起始} {纵向起始}</p><hr />
                @*<GroupBox Title="参数">*@
                <div style="height:70vh;overflow-y:auto;overflow-x:hidden;">
                    <ValidateForm Model="@Option" style="margin: 1.5rem;">
                        <EditorForm TModel="BluetoothPrinterOption">
                            <Buttons>
                                <div class="text-end">
                                    <PopConfirmButton Icon="fa-solid fas fa-clock-rotate-left" Text="复位" OnConfirm="()=>ResetConfig()" Color="Color.Warning" Content="确定复位设置吗？" />
                                    <PopConfirmButton Icon="fa-solid fas fa-clock-rotate-left" Text="预设1" OnConfirm="()=>ResetConfig(1)" Color="Color.Warning" Content="确定复位为预设1吗？" />
                                    <PopConfirmButton Icon="fa-solid fas fa-clock-rotate-left" Text="预设2" OnConfirm="()=>ResetConfig(2)" Color="Color.Warning" Content="确定复位为预设2吗？" />
                                    <PopConfirmButton Icon="fa-solid fas fa-clock-rotate-left" Text="预设3" OnConfirm="()=>ResetConfig(3)" Color="Color.Warning" Content="确定复位为预设3吗？" />
                                </div>
                            </Buttons>
                        </EditorForm>
                    </ValidateForm>
                </div>
                @*</GroupBox>*@
            </TabItem>
        </Tab>

    </div>

    <div class="col-12 col-m-6 col-sm-6" style="font-size:xx-small;">
        @if (BleInfo.Name != null)
        {
            <div class="g-3">
                历史连接 <br />
                @BleInfo.Name <br />
                @BleInfo.DeviceID.ToString() <br />
                @BleInfo.Serviceid.ToString() <br />
                @BleInfo.Characteristic.ToString() <br />
                @ReadResult
            </div>
        }
        <Switch DisplayText="自动连接" OnText="自动连接" OffText="手动连接" Value="@IsAuto" OnValueChanged="@OnStateChanged" />

        <pre style="height: 300px; overflow-y: auto; white-space: pre-wrap; word-wrap: break-word;">@Messages</pre>
    </div>
</div>